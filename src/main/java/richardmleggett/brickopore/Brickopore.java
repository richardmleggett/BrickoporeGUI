/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package richardmleggett.brickopore;

import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.Window;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.datatransfer.StringSelection;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;

/**
 * @author leggettr
 */
public class Brickopore extends javax.swing.JFrame {
    private String prefsFile = System.getProperty("user.home") + File.separator + ".brickopore.prefs";
    private BrickoporeServer server = null;
    private String urlDir = "";
    private boolean scientistsAreCheering = false;
    private boolean debugEnabled = false;
    private boolean debugging = false;

    /**
     * Creates new form JLegoPore
     */
    public Brickopore() {
        super("Brickopore");
        initComponents();
        this.setPreferredSize(new Dimension(1000, 800));
        System.out.println(scientistsLabel.getIcon());
        readOptions();
        if (debugEnabled == false) {
            debugButton.setVisible(false);
        }
    }

    /**
     * Centres a window on the screen.
     *
     * @param w the window to centre
     */
    public static void centreWindow(Window w) {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Rectangle frameSize = w.getBounds();

        w.setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        portTextField = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        alignButton = new javax.swing.JButton();
        nudgeBackButton = new javax.swing.JButton();
        nudgeFwdButton = new javax.swing.JButton();
        blastButton = new javax.swing.JButton();
        saveURLButton = new javax.swing.JButton();
        copySequenceButton = new javax.swing.JButton();
        debugButton = new javax.swing.JButton();
        beeTrailCheckbox = new javax.swing.JCheckBox();
        resetButton = new javax.swing.JButton();
        signalPanel1 = new richardmleggett.brickopore.SignalPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        scientistsLabel = new javax.swing.JLabel();
        brickoporeLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        sequenceButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Port:");

        portTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        portTextField.setText("2424");
        portTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portTextFieldActionPerformed(evt);
            }
        });

        startButton.setText("Start server");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop server");
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        alignButton.setText("Align");
        alignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignButtonActionPerformed(evt);
            }
        });

        nudgeBackButton.setText("Nudge Back");
        nudgeBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nudgeBackButtonActionPerformed(evt);
            }
        });

        nudgeFwdButton.setText("Nudge Fwd");
        nudgeFwdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nudgeFwdButtonActionPerformed(evt);
            }
        });

        blastButton.setText("BLAST");
        blastButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blastButtonActionPerformed(evt);
            }
        });

        saveURLButton.setText("Save URL");
        saveURLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveURLButtonActionPerformed(evt);
            }
        });

        copySequenceButton.setText("Copy Sequence");
        copySequenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copySequenceButtonActionPerformed(evt);
            }
        });

        debugButton.setText("Debug");
        debugButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                debugButtonActionPerformed(evt);
            }
        });

        beeTrailCheckbox.setText("Bee trail");
        beeTrailCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beeTrailCheckboxActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
                buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(buttonPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stopButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(alignButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nudgeBackButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nudgeFwdButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(blastButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveURLButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(copySequenceButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(beeTrailCheckbox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(debugButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetButton)
                                .addContainerGap(321, Short.MAX_VALUE))
        );
        buttonPanelLayout.setVerticalGroup(
                buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(buttonPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(startButton)
                                        .addComponent(stopButton)
                                        .addComponent(alignButton)
                                        .addComponent(nudgeBackButton)
                                        .addComponent(nudgeFwdButton)
                                        .addComponent(blastButton)
                                        .addComponent(saveURLButton)
                                        .addComponent(copySequenceButton)
                                        .addComponent(debugButton)
                                        .addComponent(beeTrailCheckbox)
                                        .addComponent(resetButton))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        signalPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout signalPanel1Layout = new javax.swing.GroupLayout(signalPanel1);
        signalPanel1.setLayout(signalPanel1Layout);
        signalPanel1Layout.setHorizontalGroup(
                signalPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, signalPanel1Layout.createSequentialGroup()
                                .addGap(0, 1134, Short.MAX_VALUE)
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        signalPanel1Layout.setVerticalGroup(
                signalPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(signalPanel1Layout.createSequentialGroup()
                                .addGap(219, 219, 219)
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(250, Short.MAX_VALUE))
        );

        scientistsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sci3.png"))); // NOI18N
        scientistsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scientistsLabelMouseClicked(evt);
            }
        });

        brickoporeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/brickopore5.png"))); // NOI18N

        sequenceButton.setText("Sequence");
        sequenceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequenceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(sequenceButton)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(sequenceButton)
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(brickoporeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(scientistsLabel))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(signalPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(signalPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(scientistsLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(brickoporeLabel)
                                                .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scientistsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scientistsLabelMouseClicked
        // TODO add your handling code here:
        toggleMiniFigureState();

    }//GEN-LAST:event_scientistsLabelMouseClicked

    /**
     * @author MrTomRod
     */
    private void copySequenceButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // Read sequence
        String read = "NNNNNNNNNN";
        if (server != null) {
            read = server.getRead();
        }

        // Copy sequence to clipboard
        StringSelection stringSelection = new StringSelection(read);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(stringSelection, null);
    }

    private void saveURLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveURLButtonActionPerformed
        JFileChooser jfc = new JFileChooser();

        FileNameExtensionFilter urlFilter = new FileNameExtensionFilter("URL files (*.url)", "url");
        // add filters
        jfc.addChoosableFileFilter(urlFilter);
        jfc.setFileFilter(urlFilter);
        if (urlDir.length() > 0) {
            jfc.setCurrentDirectory(new File(urlDir));
        }
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = jfc.getSelectedFile();
            String pathname = f.getPath();
            urlDir = f.getParentFile().getPath();
            if (!pathname.endsWith(".url")) {
                pathname = pathname + ".url";
            }

            try {
                PrintWriter pw = new PrintWriter(new FileWriter(pathname));
                String read = "NNNNNNNNNN";

                if (server != null) {
                    read = server.getRead();
                }

                pw.println("[InternetShortcut]");
                pw.println("URL=https://blast.ncbi.nlm.nih.gov/Blast.cgi?PROGRAM=blastn&PAGE_TYPE=BlastSearch&LINK_LOC=blasthome&QUERY=" + read);
                pw.close();
            } catch (IOException e) {
                System.out.println("Exception:");
                e.printStackTrace();
                System.exit(1);
            }

            writeOptions();
        }
    }//GEN-LAST:event_saveURLButtonActionPerformed

    private void blastButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blastButtonActionPerformed
        try {
            java.awt.Desktop.getDesktop().browse(new URI("https://blast.ncbi.nlm.nih.gov/Blast.cgi?PROGRAM=blastn&PAGE_TYPE=BlastSearch&LINK_LOC=blasthome&QUERY=" + server.getRead()));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_blastButtonActionPerformed

    private void nudgeFwdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nudgeFwdButtonActionPerformed
        server.nudgeFwdClicked();
        // TODO add your handling code here:
    }//GEN-LAST:event_nudgeFwdButtonActionPerformed

    private void nudgeBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nudgeBackButtonActionPerformed
        server.nudgeBackClicked();
        // TODO add your handling code here:
    }//GEN-LAST:event_nudgeBackButtonActionPerformed

    private void alignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignButtonActionPerformed
        server.alignClicked();
        // TODO add your handling code here:
    }//GEN-LAST:event_alignButtonActionPerformed

    private void sequenceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequenceButtonActionPerformed
        // TODO add your handling code here:
        setSequenceButtonEnabled(false);

        if (server == null) {
            System.out.println("ERROR!");
        }

        server.sequenceClicked(beeTrailCheckbox.isSelected());
    }//GEN-LAST:event_sequenceButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        server.terminate();
        stopButton.setEnabled(false);
        startButton.setEnabled(true);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        int port = Integer.parseInt(portTextField.getText());
        System.out.println("Got port " + port);
        startButton.setEnabled(false);
        stopButton.setEnabled(true);
        server = new BrickoporeServer(this, port);
        server.start();
        signalPanel1.setServer(server);
    }//GEN-LAST:event_startButtonActionPerformed

    private void portTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portTextFieldActionPerformed

    private void debugButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_debugButtonActionPerformed
        debugging = true;
        System.out.println("Debug enabled");
        server = new BrickoporeServer(this);
        server.start();
        signalPanel1.setServer(server);
    }//GEN-LAST:event_debugButtonActionPerformed

    private void beeTrailCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beeTrailCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_beeTrailCheckboxActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("Reset");
        setSequenceButtonEnabled(true);
        setMiniFigureState(false);
        if (server != null) {
            server.reset();
        }
    }//GEN-LAST:event_resetButtonActionPerformed

    public void toggleMiniFigureState() {
        if (scientistsAreCheering == true) {
            setMiniFigureState(false);
        } else {
            setMiniFigureState(true);
        }
    }

    public void setMiniFigureState(boolean cheering) {
        //String iconName = cheering ? "/Users/leggettr/Documents/NetBeansProjects/legopore/target/classes/sci4.png":"/Users/leggettr/Documents/NetBeansProjects/legopore/target/classes/sci3.png";
        //scientistsLabel.setIcon(new ImageIcon(iconName));

        scientistsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(cheering ? "/sci4.png" : "/sci3.png")));
        scientistsAreCheering = cheering;
    }

    public void setSequenceButtonEnabled(boolean tf) {
        sequenceButton.setEnabled(tf);
    }

    public void readOptions() {
        try {
            File f = new File(prefsFile);
            if (f.exists()) {
                BufferedReader br = new BufferedReader(new FileReader(f));
                String line;
                while ((line = br.readLine()) != null) {
                    if (line.startsWith("URLDir:")) {
                        urlDir = line.substring(7);
                        System.out.println("Got URLDir " + urlDir);
                    }
                }
                br.close();
            }
        } catch (Exception e) {
            System.out.println("BlastChunk exception");
            e.printStackTrace();
            System.exit(1);
        }

    }

    public void writeOptions() {
        try {
            PrintWriter pw = new PrintWriter(new FileWriter(prefsFile));

            pw.println("URLDir:" + urlDir);
            pw.close();
        } catch (IOException e) {
            System.out.println("Exception:");
            e.printStackTrace();
            System.exit(1);
        }
    }

    public void setDebugEnabled() {
        debugEnabled = true;
        debugButton.setVisible(true);
    }

    public void showResults() {
        ResultsDialog rd = new ResultsDialog(this, true);
        rd.setSequence(server.getRead());
        centreWindow(rd);
        rd.show();
    }

    public static void main(String[] args) {
        Brickopore jlp = new Brickopore();

        System.out.println("Todo:");
        System.out.println("- Amino acid conversion");

        centreWindow(jlp);
        jlp.setVisible(true);

        if (args.length >= 1) {
            if (args[0].equals("debug")) {
                jlp.setDebugEnabled();
            } else {
                System.out.println("Unknown option " + args[0]);
            }
        }

        //if (args.length != 2) {
        //    System.out.println("Syntax: legopore <port>");
        //    System.exit(1);
        //}

        //port = Integer.parseInt(args[1]);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alignButton;
    private javax.swing.JCheckBox beeTrailCheckbox;
    private javax.swing.JButton blastButton;
    private javax.swing.JLabel brickoporeLabel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton debugButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nudgeBackButton;
    private javax.swing.JButton nudgeFwdButton;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveURLButton;
    private javax.swing.JButton copySequenceButton;
    private javax.swing.JLabel scientistsLabel;
    private javax.swing.JButton sequenceButton;
    private richardmleggett.brickopore.SignalPanel signalPanel1;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
